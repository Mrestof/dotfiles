# Include this in your configs.
# Variables to set before including:
#   $defout - name of your main output monitor

# Variables {{{
# Logo key. Use Mod1 for Alt.
set $mod Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu dmenu_path | dmenu | xargs swaymsg exec --
set $menu bemenu-run
# }}}

# Output configuration {{{
# wallpaper setup
output * bg "$(xdg-user-dir PICTURES)/walls/current-bg" fill
# default output
output $defout {
  mode 1920x1080
  position 10000,10000
}
# font for title bars
font Monocraft 5.5
# Remove title bars from applications and make borders thinner
default_border pixel 2
# disable borders when possible
smart_borders on
# Make pinentry-qt a floating window by default
for_window [app_id="pinentry-qt"] floating enable
# Make a Tk window with name "%floating%" float
for_window [class="Tk" title="%floating%"] floating enable
# }}}

# Input configuration {{{
# general devices: {{{
input type:touchpad {
  dwt enabled
  tap enabled
  middle_emulation disabled
  natural_scroll enable
}
# drawing tablet
input type:tablet_tool {
  map_to_output $defout
}
# }}}
# specific devices: {{{
# thinkpad E15 Gen 4 builtin keyboard
input 1:1:AT_Translated_Set_2_keyboard {
  xkb_layout "us,ru,ua"
  xkb_options "grp:shifts_toggle,caps:swapescape"
  xkb_model "pc101"
  repeat_delay 180
  repeat_rate 30
}
# external Funkey mechanical keyboard
input 1241:662:USB-HID_Keyboard {
  xkb_layout "us,ru,ua"
  xkb_options "grp:shifts_toggle,caps:swapescape,ctrl:swap_rwin_rctl,ctrl:swap_lwin_lctl"
  xkb_model "pc101"
  repeat_delay 180
  repeat_rate 30
}
# virtual wayvnc keyboard
input 0:0:wlr_virtual_keyboard_v {
  xkb_layout "us,ru,ua"
  xkb_options "grp:shifts_toggle,caps:swapescape"
  xkb_model "pc101"
  repeat_delay 180
  repeat_rate 30
}
# external Ergo mouse
input 1133:49271:Logitech_USB_Optical_Mouse {
  accel_profile "flat"
  pointer_accel 0
}
# disable touchpad usage as mouse, works correctly in games: {{{
# DS4
input 1356:1476:Sony_Computer_Entertainment_Wireless_Controller_Touchpad {
  events disabled
}
# wireless DS4
input 1356:1476:Wireless_Controller_Touchpad {
  events disabled
}
# }}}
# }}}
# try to disable the primary clipboard (more precisely, disable middle click pasting)
exec wl-paste --primary --watch wl-copy --primary --clear
# }}}

# Idle configuration {{{
# Lock and turn off the screen after 5 minutes of inactivity
# Also lock right before going to sleep
exec swayidle -w \
  timeout 300 'swaylock --config=$DOTROOT/user/sway/lock-config -f' \
  timeout 305 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
  before-sleep 'swaylock --config=$DOTROOT/user/sway/lock-config -f'
# Don't lock the screen if any app is in fullscreen
for_window [shell=".*"] inhibit_idle fullscreen
# }}}

# Key bindings {{{
# Basics: {{{
  # Kill focused window
  bindsym --no-repeat $mod+Shift+q kill
  # Start your launcher
  bindsym $mod+d exec $menu
  # Drag floating windows by holding down $mod and left mouse button.
  # Resize them with right mouse button + $mod.
  # Despite the name, also works for non-floating windows.
  # Change normal to inverse to use left mouse button for resizing and right
  # mouse button for dragging.
  floating_modifier $mod normal
  # Reload the configuration file
  bindsym $mod+Shift+c reload
  # Exit sway (logs you out of your Wayland session)
  bindsym $mod+Shift+Delete exec 'swaymsg exit'
  # calls to local binaries
  bindsym --no-repeat Print             exec prntscr simple
  bindsym --no-repeat shift+Print       exec prntscr full
  bindsym --no-repeat $mod+Print        exec prntscr clip_edit
  bindsym --no-repeat ctrl+Print        exec wl-color-picker clipboard
  bindsym --no-repeat ctrl+shift+Print  exec wl-color-picker
# }}}
# Security: {{{
  # Lock the screen (configure the appearance in `~/.config/sway/lock-config`)
  bindsym --no-repeat XF86Favorites exec swaylock --config=$DOTROOT/user/sway/lock-config
  # Execute the password manager
  bindsym $mod+m exec BEMENU_OPTS="$BEMENU_OPTS -p 'pass:'" passmenu
# }}}
# App launching: {{{
  # Start a terminal
  bindsym $mod+Return exec $TERMCMD
  # Execute qutebrowser with specified session (only if no other instance of qutebrowser is present)
  bindsym $mod+q exec dmenu-qute-open-session
  bindsym $mod+ctrl+q exec qutebrowser $WWW_HOME
# }}}
# Miscellaneous: {{{
# Copy emoji from the list with dmenu
bindsym $mod+grave exec dmenu-emoji
# Execute the translation script with dmenu
bindsym $mod+t exec swaymsg "fullscreen disable" && dmenu-translate en ru
bindsym --to-code $mod+shift+t exec swaymsg "fullscreen disable" && dmenu-translate ru en
bindsym --to-code $mod+ctrl+t exec swaymsg "fullscreen disable" && dmenu-translate ru uk
bindsym --to-code $mod+ctrl+shift+t exec swaymsg "fullscreen disable" && dmenu-translate uk ru
# }}}
# Brightness control: {{{
  bindsym --locked XF86MonBrightnessDown exec brightnessctl set 5%-
  bindsym --locked XF86MonBrightnessUp exec brightnessctl set 5%+
  bindsym --locked shift+XF86MonBrightnessDown exec brightnessctl set 1%
  bindsym --locked shift+XF86MonBrightnessUp exec brightnessctl set 100%
#}}}
# Sound/Music control: {{{
  # pactl control
  bindsym --locked XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%
  bindsym --locked XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
  bindsym --locked XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
  bindsym --locked XF86AudioMicMute exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
  bindsym --to-code --locked $mod+shift+m exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
  bindsym --locked XF86Calculator exec pactl set-source-mute @DEFAULT_SOURCE@ toggle
  # mpd control via mpc
  #bindsym --to-code --locked $mod+p exec mpc toggle
  #bindsym --to-code --locked $mod+comma exec mpc prev
  #bindsym --to-code --locked $mod+period exec mpc next
  #bindsym --to-code --locked $mod+bracketleft exec mpc seek -5
  #bindsym --to-code --locked $mod+bracketright exec mpc seek +5
  # control every media via MPRIS
  bindsym --to-code --locked $mod+p            exec playerctl play-pause
  bindsym --to-code --locked $mod+ctrl+p       exec playerctl loop Track
  bindsym --to-code --locked $mod+comma        exec playerctl previous
  bindsym --to-code --locked $mod+period       exec playerctl next
  bindsym --to-code --locked $mod+bracketleft  exec playerctl position 5-
  bindsym --to-code --locked $mod+bracketright exec playerctl position 5+
  # bind media keys (ex: for bluetooth headphones)
  bindsym --locked XF86AudioPlay    exec playerctl play-pause
  bindsym --locked XF86AudioPrev    exec playerctl previous
  bindsym --locked XF86AudioNext    exec playerctl next
  bindsym --locked XF86AudioRewind  exec playerctl position 5-
  bindsym --locked XF86AudioForward exec playerctl position 5+

  # allow easy spotify restart on background
  assign [instance="spotify"] workspace =
  bindsym --locked $mod+shift+p exec restart-spotify

  # prepare drag-n-drop of a music by search
  bindsym $mod+shift+s exec dmenu-dnd-song
# }}}
# Moving around: {{{
  # Move your focus around
  bindsym --to-code --no-repeat $mod+$left focus left
  bindsym --to-code --no-repeat $mod+$down focus down
  bindsym --to-code --no-repeat $mod+$up focus up
  bindsym --to-code --no-repeat $mod+$right focus right
  # Move your focus between screens
  bindsym --to-code --no-repeat $mod+y focus output left
  bindsym --to-code --no-repeat $mod+u focus output down
  bindsym --to-code --no-repeat $mod+i focus output up
  bindsym --to-code --no-repeat $mod+o focus output right
  # Move the focused window
  bindsym --to-code --no-repeat $mod+Shift+$left move left
  bindsym --to-code --no-repeat $mod+Shift+$down move down
  bindsym --to-code --no-repeat $mod+Shift+$up move up
  bindsym --to-code --no-repeat $mod+Shift+$right move right
  # Move the focused workspace
  bindsym --to-code --no-repeat $mod+Ctrl+$left move workspace to output left
  bindsym --to-code --no-repeat $mod+Ctrl+$down move workspace to output down
  bindsym --to-code --no-repeat $mod+Ctrl+$up move workspace to output up
  bindsym --to-code --no-repeat $mod+Ctrl+$right move workspace to output right
# }}}
# Workspaces: {{{
  # just see the manpage to see why it's handy to have (man 5 sway)
  workspace_auto_back_and_forth yes
  # Switch to workspace
  # 1-10 {{{
    bindsym --no-repeat $mod+1 workspace number 1
    bindsym --no-repeat $mod+2 workspace number 2
    bindsym --no-repeat $mod+3 workspace number 3
    bindsym --no-repeat $mod+4 workspace number 4
    bindsym --no-repeat $mod+5 workspace number 5
    bindsym --no-repeat $mod+6 workspace number 6
    bindsym --no-repeat $mod+7 workspace number 7
    bindsym --no-repeat $mod+8 workspace number 8
    bindsym --no-repeat $mod+9 workspace number 9
    bindsym --no-repeat $mod+0 workspace number 10
  # }}}
  # 1a-10a: {{{
    # additional workspasec to separate work of similar theme by two screens
    bindsym --no-repeat $mod+ctrl+1 workspace 1a
    bindsym --no-repeat $mod+ctrl+2 workspace 2a
    bindsym --no-repeat $mod+ctrl+3 workspace 3a
    bindsym --no-repeat $mod+ctrl+4 workspace 4a
    bindsym --no-repeat $mod+ctrl+5 workspace 5a
    bindsym --no-repeat $mod+ctrl+6 workspace 6a
    bindsym --no-repeat $mod+ctrl+7 workspace 7a
    bindsym --no-repeat $mod+ctrl+8 workspace 8a
    bindsym --no-repeat $mod+ctrl+9 workspace 9a
    bindsym --no-repeat $mod+ctrl+0 workspace 10a
  # }}}
  # custom {{{
    # for some background stuff
    bindsym --no-repeat $mod+equal workspace =
  # }}}
  # Move focused container to workspace
  # 1-10 {{{
    bindsym --no-repeat $mod+Shift+1 move container to workspace number 1
    bindsym --no-repeat $mod+Shift+2 move container to workspace number 2
    bindsym --no-repeat $mod+Shift+3 move container to workspace number 3
    bindsym --no-repeat $mod+Shift+4 move container to workspace number 4
    bindsym --no-repeat $mod+Shift+5 move container to workspace number 5
    bindsym --no-repeat $mod+Shift+6 move container to workspace number 6
    bindsym --no-repeat $mod+Shift+7 move container to workspace number 7
    bindsym --no-repeat $mod+Shift+8 move container to workspace number 8
    bindsym --no-repeat $mod+Shift+9 move container to workspace number 9
    bindsym --no-repeat $mod+Shift+0 move container to workspace number 10
  # }}}
  # 1a-10a: {{{
    # additional workspasec to separate work of similar theme by two screens
    bindsym --no-repeat $mod+ctrl+shift+1 move container to workspace 1a
    bindsym --no-repeat $mod+ctrl+shift+2 move container to workspace 2a
    bindsym --no-repeat $mod+ctrl+shift+3 move container to workspace 3a
    bindsym --no-repeat $mod+ctrl+shift+4 move container to workspace 4a
    bindsym --no-repeat $mod+ctrl+shift+5 move container to workspace 5a
    bindsym --no-repeat $mod+ctrl+shift+6 move container to workspace 6a
    bindsym --no-repeat $mod+ctrl+shift+7 move container to workspace 7a
    bindsym --no-repeat $mod+ctrl+shift+8 move container to workspace 8a
    bindsym --no-repeat $mod+ctrl+shift+9 move container to workspace 9a
    bindsym --no-repeat $mod+ctrl+shift+0 move container to workspace 10a
  # }}}
  # custom {{{
    # for some background stuff
    bindsym --no-repeat $mod+Shift+equal move container to workspace =
  # }}}
# }}}
# Layout stuff: {{{
  # You can "split" the current object of your focus with
  # $mod+b or $mod+v, for horizontal and vertical splits
  # respectively.
  bindsym $mod+b splith
  bindsym $mod+v splitv
  # Switch the current container between different layout styles
  bindsym $mod+s layout stacking
  bindsym $mod+w layout tabbed
  bindsym $mod+e layout toggle split
  # Make the current focus fullscreen
  bindsym --to-code $mod+f fullscreen
  bindsym --to-code $mod+shift+f fullscreen global
  # Toggle the current focus between tiling and floating mode
  bindsym $mod+Shift+space floating toggle
  # Swap focus between the tiling area and the floating area
  bindsym $mod+space focus mode_toggle
  # Toggle stickiness
  bindsym --to-code $mod+ctrl+s sticky toggle
  # Move focus to the parent container
  bindsym --to-code $mod+a focus parent
  bindsym --to-code $mod+z focus child
  # rotate defout
  bindsym --to-code $mod+r output $defout transform 90 clockwise
  bindsym --to-code $mod+shift+r output $defout transform 90 anticlockwise
# }}}
# Scratchpad: {{{
  # Move the currently focused window to the scratchpad
  bindsym $mod+Shift+minus move scratchpad
  # Show the next scratchpad window or hide the focused scratchpad window.
  # If there are multiple scratchpad windows, this command cycles through them.
  bindsym $mod+minus scratchpad show
# }}}
# Resizing containers: {{{
  bindsym --to-code $mod+shift+y exec sway-resize left
  bindsym --to-code $mod+shift+u exec sway-resize down
  bindsym --to-code $mod+shift+i exec sway-resize up
  bindsym --to-code $mod+shift+o exec sway-resize right
  bindsym --to-code $mod+ctrl+y exec sway-resize left 300px
  bindsym --to-code $mod+ctrl+u exec sway-resize down 300px
  bindsym --to-code $mod+ctrl+i exec sway-resize up 300px
  bindsym --to-code $mod+ctrl+o exec sway-resize right 300px
# }}}
# }}}

# Status Bar {{{
# Read `man 5 sway-bar` for more information about this section.
bar {
  position top
  font Monocraft 7
  status_command while echo $($DOTROOT/user/bin/statusbar/battery) $(date +'%Y-%m-%d %H:%M:%S'); do sleep 1; done
  colors {
      statusline #ffffff
      background #000000
      inactive_workspace #000000 #000000 #acacac
  }
}
# }}}

# Autostart {{{
exec lxqt-policykit-agent
# }}}

include /etc/sway/config.d/*
