# TODO:
#   high prio:
#   - fix bat configs (batcat instead of bat on some systems)
#   - better categorize the exported variables and aliases
#   - apply program settings only when it is appropriate
#     - general configs only if the program is present on the system
#     - graphical configs only when it is appropriate
#       - general configs only if any graphical server is present
#       - wayland configs only if wayland is present
#   low prio:
#   - apply certain color configs only if a program is of supportedversion

# root of dotfiles, wherever they may roam, use from other scripts if needed
export DOTROOT="${0:h:h:h}"

# fix all sudo aliases
alias sudo='sudo '

# TODO: do I need to export them?
HISTSIZE=50000
SAVEHIST=100000

# enable vim bindings; extremely useful, despite many consider it useless :/
bindkey -v

# nethack: {{{
# TODO: integrate with dotfiles
export NETHACKOPTIONS="@${DOTROOT}/user/nethack/nethackrc"
# }}}

# colored output: {{{
export CLICOLOR=1
alias ip='ip --color=auto'
alias diff='diff --color=auto'
alias grep='grep --color=auto'
export BEMENU_OPTS="-ci -l 16 -W 0.3 -p 'exec:' -P '>' -w --scrollbar always \
--scf '#f84b8c' --hf '#f84b8c' --tf '#f84b8c'"

# bat {{{:
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export MANROFFOPT="-c"
alias bathelp='bat --plain --language=help'
help() {
    "$@" --help 2>&1 | bathelp
}
# }}}
# }}}

# `pass` configs: {{{
export PASSWORD_STORE_DIR=$HOME/.local/share/password-store
export PASSWORD_STORE_CLIP_TIME=5
export PASSWORD_STORE_GENERATED_LENGTH=40
# }}}

export PATH="$HOME/.local/bin:$DOTROOT/user/bin:$PATH"

export EDITOR='nvim'
export TERMINAL_EMULATOR=/bin/foot
export TERMCMD=$TERMINAL_EMULATOR
export WWW_HOME=https://lite.duckduckgo.com/lite
export GNUPGHOME=$HOME/.local/share/gnupg

export XDG_CURRENT_DESKTOP=sway
export QT_QPA_PLATFORM="wayland;xcb"

# nmcli: {{{
alias n='nmcli'
alias na='n connection show --active'
# }}}

alias e=$EDITOR
alias si='swayimg'
alias wlp='wl-paste'
alias wlc='wl-copy'
alias bli="bluetoothctl"

alias df='df -h'
alias ls='eza --group --classify --group-directories-first --git'
alias l='ls -lh'
alias la='l -a'
alias dnd='dragon-drop -x'
alias auracle='auracle --sort=votes'

function swap()
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}

function dsf() {
  diff -u $1 $2 |diff-so-fancy
}

find-up () {
  local path=$(pwd)
  while [[ "$path" != "" && ! -e "$path/$1" ]]; do
    path=${path%/*}
  done
  echo "$path"
}

sv () {
  local closest_venv_loc=$(find-up .venv)
  source $closest_venv_loc/.venv/bin/activate
}

# fzf: {{{
# fh - repeat history
fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g')
}
# fd - cd to selected directory
fd() {
  local dir
  dir=$(find ${1:-.} -path '*/\.*' -prune \
                  -o -type d -print 2> /dev/null | fzf +m) &&
  cd "$dir"
}
# j - integration with autojump
## prepare the regular shell
autojump_path='/usr/share/autojump/autojump.zsh'
[[ -f $autojump_path ]] && . $autojump_path
## the function itself
j() {
    local preview_cmd="ls {2..}"
    if command -v eza &> /dev/null; then
        preview_cmd="eza -l {2}"
    fi

    if [[ $# -eq 0 ]]; then
                 cd "$(autojump -s | sort -k1gr | awk -F : '$1 ~ /[0-9]/ && $2 ~ /^\s*\// {print $1 $2}' | fzf --height 40% --reverse --inline-info --preview "$preview_cmd" --preview-window down:50% | cut -d$'\t' -f2- | sed 's/^\s*//')"
    else
        cd $(autojump $@)
    fi
}
# }}}
